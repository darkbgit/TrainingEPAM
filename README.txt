TASK0

Задача “Медиатека”
Выполнить декомпозию и разработать систему классов для задачи «Медиатека». Медиатека состоит из музыкальных треков, видеофайлов, фотографий и списков проигрывания этих файлов. Должны поддерживаться операции добавления/удаления в медиатеку и списки проигрывания, поиска среди медиафайлов. Абстрактный медиаплейер должен иметь возможность проигрывать любые медиафайлы и их списки. Декомпозицию и классы продумывать исходя из принципов ООП:
1)	Абстрагирование
2)	Ограничение доступа и инкапсуляция
3)	Иерархия (наследование и композиция)
4)	Типизация
5)	Полиморфизм
Объяснить явление полиморфизма на примере  проигрывания медиафайлов абстрактным проигрывателем.
В качестве решения задачи принимается один из вариантов:
•	1) UML диаграммы классов и интерфейсов с сигнатурами методов;
•	2)  Объектная модель разрабатываемой системой, с точностью до сигнатур методов. Кодировать тела методов необязательно;
•	3) Произвольная диаграмма классов, интерфейсов, процессов с иллюстрацией требований задачи.
___________________________________________________________________________________________________________

TASK1

Реализовать консольное приложение, удовлетворяющее следующим требованиям:

1.	Выполнить анализ и декомпозицию предметной области.  30 %
2.	Использовать возможности ООП: наследование, полиморфизм, инкапсуляция. Отразить декомпозицию в структуре классов.  30 %
3.	Каждый класс должен иметь исчерпывающее смысл название и информативный состав.  15 %
4.	При кодировании следует придерживаться соглашения об оформлении кода code convention. (TO DO, FAQ) 15%
5.	Файлы проекта должны быть разделены по папкам согласно доменной модели. 5 %
6.	Работа с консолью или консольное меню должно быть минимальным. 5 %

	Шеф-повар. Определить иерархию овощей. Сделать салат. Посчитать калорийность. Провести сортировку овощей для салата на основе одного из параметров. Найти овощи в салате, соответствующие заданному диапазону калорийности.
_________________________________________________________________________________________________________________

TASK2

Создать программу обработки текста учебника по программированию с использованием классов: Символ, Слово, Предложение, Знак препинания и др. (состав и иерархию классов продумать самостоятельно). Во всех задачах с формированием текста заменять табуляции и последовательности пробелов одним пробелом.

Вывести все предложения заданного текста в порядке возрастания количества слов в каждом из них.
Во всех вопросительных предложениях текста найти и напечатать без повторений слова заданной длины.
Из текста удалить все слова заданной длины, начинающиеся на согласную букву.
В некотором предложении текста слова заданной длины заменить указанной подстрокой, длина которой может не совпадать с длиной слова.

1.	Выполнить анализ и декомпозицию предметной области.
2.	Использовать возможности ООП: наследование, полиморфизм, инкапсуляция. Отразить декомпозицию в структуре классов.
3.	Каждый класс должен иметь исчерпывающее смысл название и информативный состав.
4.	При кодировании следует придерживаться соглашения об оформлении кода code convention. (TO DO, FAQ)
5.	Файлы проекта должны быть разделены по папкам согласно доменной модели.
6.	Работа с консолью или консольное меню должно быть минимальным.
Использование интерфейсов и низкая связанность между классами;
Управление ресурсами и использование интерфейса IDisposable (TO DO); 
Предпочтительное использование LINQ запросов при выполнении операций (TO DO);
Разумный exception handling;

Использование конфигурации для хранения путей к файлам;
Возможность сохранения объектной модели в виде текстового файла;
			
